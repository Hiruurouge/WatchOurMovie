version: '3.3'

services:
  db:
    build: ./db
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    env_file:
      - ./.env
    volumes:
      - mysql-data:/var/lib/mysql
      - ./.env:/code/src/.env
    networks:
      backend: 
        ipv4_address: "${MYSQL_URL}"
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 10s
        retries: 6

  user-service:
    build: ./user-service
    ports:
      - ${USER_PORT}:${USER_PORT}
    env_file:
      - ./.env
    volumes: 
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend: 
        ipv4_address: "${USER_IP}"
        
  gateway-service:
    build: ./gateway-service
    ports:
      - 3212:3212
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${GATEWAY_IP_B}"
      frontend:
        ipv4_address: "${GATEWAY_IP_F}"

  auth-service:
    build: ./auth-service
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    env_file:
      - ./.env
    volumes: 
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${AUTH_IP}"
        
  group-service:
    build: ./group-service
    ports:
      - ${GROUP_PORT}:${GROUP_PORT}
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${GROUP_IP}"
        
  preference-service:
    build: ./preferences-service
    ports:
      - ${PREFERENCE_PORT}:${PREFERENCE_PORT}
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${PREFERENCE_IP}"

  movie-service:
    build: ./movie-service
    ports:
      - ${MOVIE_PORT}:${MOVIE_PORT}
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${MOVIE_IP}"

  tmdb-service:
    build: ./tmdb
    ports:
      - ${TMDB_PORT}:${TMDB_PORT}
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${TMDB_IP}"

  reco-service:
    build: ./reco_service
    depends_on:
      db: 
        condition: service_healthy
    links:
      - db
    ports:
      - ${RECO_PORT}:${RECO_PORT}
    env_file:
      - ./.env
    volumes:
      - ./model:/code/model
      - ./schema:/code/schema
      - ./.env:/code/src/.env
    networks:
      backend:
        ipv4_address: "${RECO_IP}"
  
  frontend:
    build: ./frontend
    ports:
      - ${FRONT_PORT}:${FRONT_PORT}
    env_file:
      - ./.env
    networks:
      frontend:
        ipv4_address: "${FRONT_IP}"


networks:
  backend: 
    driver: bridge
    ipam: 
      config:
        - subnet: "${NETWORK_BACK}/27"
          gateway: "${NETWORK_BACK_GATEWAY}"
  
  frontend: 
    driver: bridge
    ipam: 
      config:
        - subnet: "${NETWORK_FRONT}/29"
          gateway: "${NETWORK_FRONT_GATEWAY}"

volumes:
  mysql-data:
